● 集合类以及集合框架；HashMap与HashTable实现原理，线程安全性，hash冲突及处理算法；ConcurrentHashMap；
jdk1.8中ConcurrentHashMap取消了原先分段锁的概念，转而对map中的每一条entry加锁，进一步提高了效率。
    步骤：若tab为空，初始化，
         若不为空查看tab[i]是否为空，为空则新建node，
         若不为空且状态为moved，则正在进行transfer，此线程会加入多线程transfer，每次处理完一个节点就将之设置为forward,
         若看到有节点为forward则直接跳过，直至返回扩容完成后的table，
         之后对首节点加锁,查找链表或红黑树，将节点更新或插入进tab，检查节点数，若大于8则将链表结构转换为红黑树结构，最后检查计数决定是否扩容。

● 进程和线程的区别；

● Java的并发、多线程、 线程模型；

● 什么是线程池，如何使用? 答：线程池就是事先将多个线程对象放到一个容器中，当使用的时候就不用new 线程而是直接去池中拿线程即可，节

● 数据一致性如何保证；Synchronized关键字，类锁，方法锁，重入锁；

● Java中实现多态的机制是什么；

● 如何将一个Java对象序列化到文件里；

● 说说你对Java反射的理解； 答：Java 中的反射首先是能够获取到Java 中要反射类的字节码， 获取字节码有三种方法，

● 同步的方法；多进程开发以及多进程应用场景；

● 在Java中wait和seelp方法的不同；答：最大的不同是在等待时wait 会释放锁，而sleep 一直持有锁。wait 通常被用于线程间交互，sleep 通常被用于暂停执行。

● synchronized 和volatile 关键字的作用；答：1）保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。2）禁止进行指令重排序。

● volatile 本质是在告诉jvm 当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取；synchronized 则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。

1.volatile 仅能使用在变量级别；synchronized 则可以使用在变量、方法、和类级别的

2.volatile 仅能实现变量的修改可见性，并不能保证原子性；synchronized 则可以保证变量的修改可见性和原子性

3.volatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。

4.volatile 标记的变量不会被编译器优化；synchronized 标记的变量可以被编译器优化

● 服务器只提供数据接收接口，在多线程或多进程条件下，如何保证数据的有序到达；

● ThreadLocal原理，实现及如何保证Local属性；

● String StringBuilder StringBuffer对比；

● 你所知道的设计模式有哪些； 答：Java 中一般认为有23 种设计模式，我们不需要所有的都会，但是其中常用的几种设计模式应该去掌握。下面列出了所有的设计模式。需要掌握的设计模式我单独列出来了，当然能掌握的越多越好。

总体来说设计模式分为三大类：

创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。

结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。

行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

● Java如何调用c、c++语言；

● 接口与回调；回调的原理；写一个回调demo；

● 泛型原理，举例说明；解析与分派；

● 抽象类与接口的区别；应用场景；抽象类是否可以没有方法和属性；

● 静态属性和静态方法是否可以被继承？是否可以被重写？以及原因？

● 修改对象A的equals方法的签名，那么使用HashMap存放这个对象实例的时候，会调用哪个equals方法；

● 说说你对泛型的了解；

● Java的异常体系；

● 如何控制某个方法允许并发访问线程的个数；

● 动态代理的区别，什么场景使用；

最新部分

● 简述synchronized?Object；Monitor机制；

● 简述happen-before规则 ；

● JUC和Object ； Monitor机制区别是什么 ； 简述AQS原理 ；

● 简述DCL失效原因，解决方法 ；

● 简述nio原理 ；

● jvm运行时数据区域有哪几部分组成，各自作用 ；

● gc算法有哪些 ； gc收集器有哪些 ；

● 简述class加载各阶段过程 ； class ； loader有哪些模型 ；

● 简述常用的JDK命令行工具 ；

● 简述字节码文件组成 ；

● 讲讲你平常是如何针对具体的SQL做优化 ；

● mysql的存储引擎有哪些，区别 ；

● gc:内存模型；

● gc: 垃圾回收 ；

● 多线程：如何实现一个定时调度和循环调度的工具类。但提交任务处理不过来的时候，拒绝机制应该如何处理 ； 线程池默认有哪几种拒绝机制 ；

● 多线程： 如何实现一个ThreadLocal ；

● 说说你了解的一个线程安全队列 ；

● Atomic包的实现原理是什么 ；

● CAS又是怎么保证原子性的 ；

● string分析1000次循环subString用了多少内存 ；

数据结构与算法

● 堆和栈在内存中的区别是什么(数据结构方面以及实际实现方面)；

● 最快的排序算法是哪个？给阿里2万多名员工按年龄排序应该选择哪个算法？堆和树的区别；写出快排代码；链表逆序代码；

● 求1000以内的水仙花数以及40亿以内的水仙花数；

● 子串包含问题(KMP 算法)写代码实现；

● 万亿级别的两个URL文件A和B，如何求出A和B的差集C,(Bit映射->hash分组->多文件读写效率->磁盘寻址以及应用层面对寻址的优化)

● 蚁群算法与蒙特卡洛算法；

● 写出你所知道的排序算法及时空复杂度，稳定性；

● 百度POI中如何试下查找最近的商家功能(坐标镜像+R树)。

其他

● 死锁的四个必要条件；

● 常见编码方式；utf-8编码中的中文占几个字节；int型几个字节；

● 实现一个Json解析器(可以通过正则提高速度)；

● MVC MVP MVVM; 常见的设计模式；写出观察者模式的代码；

● TCP的3次握手和四次挥手；TCP与UDP的区别；

● HTTP协议；HTTP1.0与2.0的区别；HTTP报文结构；

● HTTP与HTTPS的区别以及如何实现安全性；

● 都使用过哪些框架、平台；

● 都使用过哪些自定义控件；

● 介绍你做过的哪些项目；